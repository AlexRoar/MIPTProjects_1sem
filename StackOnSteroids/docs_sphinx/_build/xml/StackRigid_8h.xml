<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="StackRigid_8h" kind="file" language="C++">
    <compoundname>StackRigid.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">time.h</includes>
    <includedby refid="main_8cpp" local="yes">/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/main.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h</label>
        <link refid="StackRigid_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>time.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h</label>
        <link refid="StackRigid_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="StackRigid_8h_1a96e0bc8f204dbef33b6e6a664c5b5663" prot="public" static="no">
        <name>PASTER</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>x ## _ ## y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="16" column="12" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="StackRigid_8h_1a90ce550ff78fd420b633c5d88dfd2883" prot="public" static="no">
        <name>EVALUATOR</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="StackRigid_8h_1a96e0bc8f204dbef33b6e6a664c5b5663" kindref="member">PASTER</ref>(x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="17" column="9" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" prot="public" static="no">
        <name>__overload</name>
        <param><defname>FUNC</defname></param>
        <param><defname>TYPE</defname></param>
        <initializer><ref refid="StackRigid_8h_1a90ce550ff78fd420b633c5d88dfd2883" kindref="member">EVALUATOR</ref>(FUNC, TYPE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="18" column="9" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="StackRigid_8h_1a231d62549d9cfc45a003c319b7e1779e" prot="public" static="no">
        <name>StackElementDump</name>
        <param><defname>FILE</defname></param>
        <param><defname>VALUE</defname></param>
        <initializer>{<ref refid="StackRigid_8h_1ade6725d32f719f41a22d20ab9be146b6" kindref="member">fprintf</ref>(FILE, &quot;%d&quot;, VALUE);}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="21" column="9" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="StackRigid_8h_1afa660da841608914d20d9819a7efe039" prot="public" static="no" strong="no">
        <type></type>
        <name>StackRigidOperationCodes</name>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039abd09a7714cc602ea848ab2c9fa37692b" prot="public">
          <name>STACK_OP_OK</name>
          <briefdescription>
<para>Succesful operation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039aba36d99a3bcd8766e93ebb89f7e2f18c" prot="public">
          <name>STACK_OP_UNDERFLOW</name>
          <briefdescription>
<para>Tried to get value from the empty stack. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039a3fd246337bd474e0b0be6c3db2106283" prot="public">
          <name>STACK_OP_OVERFLOW</name>
          <briefdescription>
<para>Stack overflow and new memory allocation failed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039ac5fdd9b73e4decd4f5ddca7b680c345d" prot="public">
          <name>STACK_OP_NOMEMORY</name>
          <briefdescription>
<para>No memory for stack alocations. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039afd89a4e74adda7fac95c033ffc862a33" prot="public">
          <name>STACK_OP_INTEGRITYERR</name>
          <briefdescription>
<para>Stack memory was altered by some outer access. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e" prot="public">
          <name>STACK_OP_NULL</name>
          <briefdescription>
<para>Found NULL pointer during the operation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039aba36d99a3bcd8766e93ebb89f7e2f18c" prot="public">
          <name>STACK_OP_UNDERFLOW</name>
          <briefdescription>
<para>Tried to get value from the empty stack. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039a3fd246337bd474e0b0be6c3db2106283" prot="public">
          <name>STACK_OP_OVERFLOW</name>
          <briefdescription>
<para>Stack overflow and new memory allocation failed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039ac5fdd9b73e4decd4f5ddca7b680c345d" prot="public">
          <name>STACK_OP_NOMEMORY</name>
          <briefdescription>
<para>No memory for stack alocations. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039afd89a4e74adda7fac95c033ffc862a33" prot="public">
          <name>STACK_OP_INTEGRITYERR</name>
          <briefdescription>
<para>Stack memory was altered by some outer access. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e" prot="public">
          <name>STACK_OP_NULL</name>
          <briefdescription>
<para>Found NULL pointer during the operation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Codes returned after operations on Stack. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="46" column="1" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="46" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5f" prot="public" static="no" strong="no">
        <type></type>
        <name>StackRigidState</name>
        <enumvalue id="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa989d56d3bc427c9d383509dce98c6a34" prot="public">
          <name>STACK_ST_OK</name>
          <briefdescription>
<para>Stack is running as expected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" prot="public">
          <name>STACK_ST_INTEGRITYERR</name>
          <briefdescription>
<para>Stack was altered by some outer access. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa61adf5622b3c4fa9e8bb422932e3ed58" prot="public">
          <name>STACK_ST_UNINITIALIZED</name>
          <briefdescription>
<para>Stack is uninitialized. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fae8a01dc716200146f1c2488155a40ecb" prot="public">
          <name>STACK_ST_NULL</name>
          <briefdescription>
<para>Found NULL pointer during the operation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" prot="public">
          <name>STACK_ST_INTEGRITYERR</name>
          <briefdescription>
<para>Stack was altered by some outer access. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa61adf5622b3c4fa9e8bb422932e3ed58" prot="public">
          <name>STACK_ST_UNINITIALIZED</name>
          <briefdescription>
<para>Stack is uninitialized. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fae8a01dc716200146f1c2488155a40ecb" prot="public">
          <name>STACK_ST_NULL</name>
          <briefdescription>
<para>Found NULL pointer during the operation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Codes characterizing Stack state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="77" column="1" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="77" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="StackRigid_8h_1a2b23b57ad918293ba96140fc43194967" prot="public" static="no">
        <type>enum <ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref></type>
        <definition>typedef enum StackRigidOperationCodes StackRigidOperationCodes</definition>
        <argsstring></argsstring>
        <name>StackRigidOperationCodes</name>
        <briefdescription>
<para>Codes returned after operations on Stack. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="71" column="26"/>
      </memberdef>
      <memberdef kind="typedef" id="StackRigid_8h_1acc74b48b41d3ec38cb05184b602c7508" prot="public" static="no">
        <type>enum <ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref></type>
        <definition>typedef enum StackRigidState StackRigidState</definition>
        <argsstring></argsstring>
        <name>StackRigidState</name>
        <briefdescription>
<para>Codes characterizing Stack state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="94" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" prot="public" static="no" mutable="no">
        <type>void <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref> *</type>
        <definition>StackRigidOperationCodes StackElementType ** stack</definition>
        <argsstring></argsstring>
        <name>stack</name>
        <initializer>{
 
    <ref refid="StackRigid_8h_1a0ae26ae1c312c7f76a50eb9087580724" kindref="member">if</ref> (stack == NULL)
        return <ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fae8a01dc716200146f1c2488155a40ecb" kindref="member">STACK_ST_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="125" column="41" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="125" bodyend="-1"/>
        <referencedby refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad">__overload</referencedby>
        <referencedby refid="StackRigid_8h_1ab6e1a246017ca3742ce77f0b32327841" compoundref="StackRigid_8h" startline="495" endline="500">for</referencedby>
        <referencedby refid="StackRigid_8h_1a5905730f9ceb85034f9cd5849194cbbf" compoundref="StackRigid_8h" startline="502" endline="506">if</referencedby>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a4766bcac8da8eeda84b39290e8a39006" prot="public" static="no" mutable="no">
        <type><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref> <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref> short int</type>
        <definition>static StackRigidOperationCodes StackElementType short int direction</definition>
        <argsstring></argsstring>
        <name>direction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="160" column="78" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" prot="public" static="no" mutable="no">
        <type><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref> <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref> <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        <definition>* value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>{
    <ref refid="StackRigid_8h_1a0ae26ae1c312c7f76a50eb9087580724" kindref="member">if</ref> (<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref> == NULL)
        return <ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e" kindref="member">STACK_OP_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="196" column="78" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a2c1f314ba75202e9c0ef4e2d93a7bb6d" prot="public" static="no" mutable="no">
        <type><ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref></type>
        <definition>StackRigidState integrityChecks</definition>
        <argsstring></argsstring>
        <name>integrityChecks</name>
        <initializer>= <ref refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" kindref="member">__overload</ref>(StackValidate, <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>) (*<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="243" column="21" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a19c628be7020d2b8a22b37cba648660e" prot="public" static="no" mutable="no">
        <type><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref></type>
        <definition>StackRigidOperationCodes realocResult</definition>
        <argsstring></argsstring>
        <name>realocResult</name>
        <initializer>= <ref refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" kindref="member">__overload</ref>(__StackRealocate, <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>, 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="249" column="30" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="249" bodyend="-1"/>
        <referencedby refid="StackRigid_8h_1aea62c82768cd6ef1a56cd05e68501788" compoundref="StackRigid_8h" startline="250" endline="253">if</referencedby>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a1c97025785fbf9a8397e31479800f8fc" prot="public" static="no" mutable="no">
        <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref></type>
        <definition>stack data[(*stack) -&gt;size]</definition>
        <argsstring>[(*stack) -&gt;size]</argsstring>
        <name>data</name>
        <initializer>= <ref refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" kindref="member">value</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="255" column="7" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" prot="public" static="no" mutable="no">
        <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref></type>
        <definition>stack size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="256" column="7" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a049b8238cb27892165351846886d6a2e" prot="public" static="no" mutable="no">
        <type>return</type>
        <definition>@ STACK_OP_OK</definition>
        <argsstring></argsstring>
        <name>STACK_OP_OK</name>
        <briefdescription>
<para>Succesful operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="263" column="12" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a2caa8097440c1e2a2423da9b7ae9404c" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t currentChecksumVital</definition>
        <argsstring></argsstring>
        <name>currentChecksumVital</name>
        <initializer>= <ref refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" kindref="member">__overload</ref>(__StackGetChecksumVital, <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="334" column="14" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a93186122a9f6b9791d9b1d7929397034" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t currentChecksum</definition>
        <argsstring></argsstring>
        <name>currentChecksum</name>
        <initializer>= <ref refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" kindref="member">__overload</ref>(__StackGetChecksum, <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="338" column="14" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a4b2b5de94a6d5cbd85ca204c433b6e74" prot="public" static="no" mutable="no">
        <type>return</type>
        <definition>@ STACK_ST_OK</definition>
        <argsstring></argsstring>
        <name>STACK_ST_OK</name>
        <briefdescription>
<para>Stack is running as expected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="343" column="12" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="343" bodyend="-1"/>
        <referencedby refid="StackRigid_8h_1a1d864cc9683f31009e740a88e7dd9e08" compoundref="StackRigid_8h" startline="469" endline="482">switch</referencedby>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a5786bffb29b2425c43a80d1ecddbc416" prot="public" static="no" mutable="no">
        <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref></type>
        <definition>stack checkSumVital</definition>
        <argsstring></argsstring>
        <name>checkSumVital</name>
        <initializer>= <ref refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" kindref="member">__overload</ref>(__StackGetChecksumVital, <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="350" column="10" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a78512a9976489009fe415634772b2edf" prot="public" static="no" mutable="no">
        <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref></type>
        <definition>stack checkSum</definition>
        <argsstring></argsstring>
        <name>checkSum</name>
        <initializer>= <ref refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" kindref="member">__overload</ref>(__StackGetChecksum, <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="351" column="10" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void * firstBlock</definition>
        <argsstring></argsstring>
        <name>firstBlock</name>
        <initializer>= (char*)<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref> + <ref refid="StackRigid_8h_1a94a014c56957d128b71edf7751ec0a47" kindref="member">sizeof</ref>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;<ref refid="StackRigid_8h_1a78512a9976489009fe415634772b2edf" kindref="member">checkSum</ref>) + <ref refid="StackRigid_8h_1a94a014c56957d128b71edf7751ec0a47" kindref="member">sizeof</ref>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;<ref refid="StackRigid_8h_1a5786bffb29b2425c43a80d1ecddbc416" kindref="member">checkSumVital</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="359" column="10" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="359" bodyend="-1"/>
        <referencedby refid="StackRigid_8h_1a37faf27d6e9ab4e0a417f29efbda1cbb" compoundref="StackRigid_8h" startline="32" endline="40">adlerChecksum</referencedby>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t memory</definition>
        <argsstring></argsstring>
        <name>memory</name>
        <initializer>= <ref refid="StackRigid_8h_1a94a014c56957d128b71edf7751ec0a47" kindref="member">sizeof</ref>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;<ref refid="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" kindref="member">size</ref>) + <ref refid="StackRigid_8h_1a94a014c56957d128b71edf7751ec0a47" kindref="member">sizeof</ref>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity)+ <ref refid="StackRigid_8h_1a94a014c56957d128b71edf7751ec0a47" kindref="member">sizeof</ref>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;logFile)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="361" column="18" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="361" bodyend="-1"/>
        <referencedby refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" compoundref="StackRigid_8h" startline="267" endline="281">StackElementType</referencedby>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a968bd499cfe6e605baa6874ca0c86d2e" prot="public" static="no" mutable="no">
        <type>struct tm *</type>
        <definition>struct tm* ptm</definition>
        <argsstring></argsstring>
        <name>ptm</name>
        <initializer>= localtime(&amp;rawtime)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="452" column="13" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" prot="public" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* output</definition>
        <argsstring></argsstring>
        <name>output</name>
        <initializer>= <ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;logFile</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="454" column="10" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="454" bodyend="-1"/>
        <referencedby refid="StackRigid_8h_1ab6e1a246017ca3742ce77f0b32327841" compoundref="StackRigid_8h" startline="495" endline="500">for</referencedby>
        <referencedby refid="StackRigid_8h_1a16a7171e9728bb34fc74d1c2c3d59275" compoundref="StackRigid_8h" startline="455" endline="458">if</referencedby>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1a0544c3fe466e421738dae463968b70ba" prot="public" static="no" mutable="no">
        <type></type>
        <definition>else</definition>
        <argsstring></argsstring>
        <name>else</name>
        <initializer>{
        <ref refid="StackRigid_8h_1ade6725d32f719f41a22d20ab9be146b6" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>, &quot;Stack (&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="465" column="5" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1ac9758d3e0260183af2f6a061cd9254f5" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <initializer>= &quot;ok&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="467" column="20" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="467" bodyend="-1"/>
        <referencedby refid="StackRigid_8h_1a1d864cc9683f31009e740a88e7dd9e08" compoundref="StackRigid_8h" startline="469" endline="482">switch</referencedby>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1aa24d2025a949cfcab6af74bbea7bbd93" prot="public" static="no" mutable="no">
        <type><ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref></type>
        <definition>StackRigidState checks</definition>
        <argsstring></argsstring>
        <name>checks</name>
        <initializer>= <ref refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" kindref="member">__overload</ref>(StackValidate, <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="468" column="25" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="494" column="16" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="494" bodyend="-1"/>
        <referencedby refid="StackRigid_8h_1ab6e1a246017ca3742ce77f0b32327841" compoundref="StackRigid_8h" startline="495" endline="500">for</referencedby>
        <referencedby refid="StackRigid_8h_1a5905730f9ceb85034f9cd5849194cbbf" compoundref="StackRigid_8h" startline="502" endline="506">if</referencedby>
        <referencedby refid="main_8cpp_1ac0f2228420376f4db7e1274f2b41667c" compoundref="main_8cpp" startline="23" endline="71">main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="StackRigid_8h_1a37faf27d6e9ab4e0a417f29efbda1cbb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t adlerChecksum</definition>
        <argsstring>(const void *firstBlock, size_t len)</argsstring>
        <name>adlerChecksum</name>
        <param>
          <type>const void *</type>
          <declname>firstBlock</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Calculates Adler-32 checksum from the firstBlock to the firstBlock + len. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>Not for the manual use! </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">firstBlock</parametername>
</parameternamelist>
<parameterdescription>
<para>first block to include to the checksum </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of byte sequence </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>checksum </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="32" column="17" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="32" bodyend="40" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="170" declcolumn="17"/>
        <references refid="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" compoundref="StackRigid_8h" startline="359">firstBlock</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a94083fea0de2aea65e4fb9440048f757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>__overload</definition>
        <argsstring>(StackRigid, StackElementType) __overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type><ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref></type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>The main structure. </para>
        </briefdescription>
        <detaileddescription>
<para>Create new stack with pre-defined capacity.</para>
<para>There&apos;s no definition in the header file in order to block direct parameters access</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>initial stack capacity. Set to 0 if yo want the stack to adopt automaticaly. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">logFile</parametername>
</parameternamelist>
<parameterdescription>
<para>file for logging </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new stack pointer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="32" column="17" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="106" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1ad2aa809be4069ec43ea7acc81fe0dac5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __overload</definition>
        <argsstring>(__StackUpdateChecksum, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>__StackUpdateChecksum</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Updates Stack checksums. Does not take into account bytes inside the stack but outside of its last element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>Not for the manual use! <verbatim>* Stack memory :  [ __stack area__ | value 1, value 2, ..., value n || ___garbage area___]
* ____________________________________________________________________^ alterations in this area are not checked
* </verbatim> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack that checksums are needed to be updated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="125" column="13" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="302" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a96894c6e311ee779636592014ad2766c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t __overload</definition>
        <argsstring>(__StackGetChecksum, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>__StackGetChecksum</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Claculates big Stack checksum. Uses Adler-32 method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>Not for the manual use! <verbatim>* Stack memory : [ checkSum checkSumVital capacity size logFile | value 1, value 2, ..., value n || ___garbage area___]
* ________________from here ^__________________________________________________________^to here
* </verbatim> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack that checksums are needed to be updated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="137" column="17"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a9adbd875476f245e288278f140fbdc80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t __overload</definition>
        <argsstring>(__StackGetChecksumVital, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>__StackGetChecksumVital</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Uses Adler-32 method. Calculates Stack checksum only for the vital parameters. This is necessary because __StackGetChecksum() relies on capacity and size. If they were changed, behaviour is undefined. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>Not for the manual use!</para>
</simplesect>
<verbatim>* Stack memory : [ checkSum checkSumVital capacity size logFile | value 1, value 2, ..., value n || ___garbage area___]
* ______________________________from here ^__________________^to here
* </verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack that checksums are needed to be updated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="151" column="17"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1aa153ee87892e9f6ac0dc09be1d86e137" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref></type>
        <definition>static StackRigidOperationCodes __overload</definition>
        <argsstring>(__StackRealocate, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>__StackRealocate</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Realocates Stack if needed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>Not for the manual use! </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack to be realocated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">direction</parametername>
</parameternamelist>
<parameterdescription>
<para>which direction realocations are available. &gt; 0 -&gt; expand space if needed, &lt; 0 -&gt; shrink space if needed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="160" column="33"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StackElementType</definition>
        <argsstring>(const size_t capacity, FILE *logFile)</argsstring>
        <name>StackElementType</name>
        <param>
          <type>const size_t</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>logFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="267" column="14" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="267" bodyend="281" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="179" declcolumn="14"/>
        <references refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" compoundref="StackRigid_8h" startline="18">__overload</references>
        <references refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" compoundref="StackRigid_8h" startline="361">memory</references>
        <referencedby refid="StackRigid_8h_1af79bbc185100ee1491995ae80396a2f3" compoundref="StackRigid_8h" startline="244" endline="247">if</referencedby>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a836cd947f32595eadd82154f5344b182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref></type>
        <definition>StackRigidState __overload</definition>
        <argsstring>(StackValidate, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>StackValidate</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Perform all stack checks: checksums, general constrains. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack to be validated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="186" column="17"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a97a66ed9a1a8be64c213ac8f57f80dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref></type>
        <definition>StackRigidOperationCodes __overload</definition>
        <argsstring>(StackPush, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>StackPush</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Push the value to the stack The operation can perform realocations if there is not enough space. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack to be changed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be pushed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the outcome of the operation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="196" column="26"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1abf30878508ba254a5dee43d7ee97e812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref></type>
        <definition>StackRigidOperationCodes __overload</definition>
        <argsstring>(StackPop, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>StackPop</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Pop value from the end of the stack The operation can perform realocations if there is too much space. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack to be distructed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be pushed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the outcome of the operation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="205" column="26"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a9b8f2344f7d59d6e3cb6658c2421ae31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref></type>
        <definition>StackRigidOperationCodes __overload</definition>
        <argsstring>(StackDestruct, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>StackDestruct</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Free stack memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack to be distructed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the outcome of the operation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="213" column="26"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a818a7cd3215adbdabf0536a09bdb43b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref></type>
        <definition>StackRigidOperationCodes __overload</definition>
        <argsstring>(StackBack, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>StackBack</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Free stack memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack to be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the outcome of the operation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="221" column="26"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a4da094d1d949e620fca0a15b481b46de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __overload</definition>
        <argsstring>(StackDump, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>StackDump</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Dumps debug information about the stack. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack to be dumped </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="228" column="6"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t __overload</definition>
        <argsstring>(StackRigidMemoryUse, StackElementType)(__overload(StackRigid</argsstring>
        <name>__overload</name>
        <param>
          <type>StackRigidMemoryUse</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref></type>
        </param>
        <briefdescription>
<para>Memory alocated for the Stack. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack to be checked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>alocated bytes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="236" column="8"/>
        <references refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" compoundref="StackRigid_8h" startline="125">stack</references>
        <references refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e" compoundref="StackRigid_8h" startline="70">STACK_OP_NULL</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1af79bbc185100ee1491995ae80396a2f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(integrityChecks !=STACK_ST_OK)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1a2c1f314ba75202e9c0ef4e2d93a7bb6d" kindref="member">integrityChecks</ref> !</type>
          <defval><ref refid="StackRigid_8h_1a4b2b5de94a6d5cbd85ca204c433b6e74" kindref="member">STACK_ST_OK</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="244" column="5" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="244" bodyend="247"/>
        <references refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" compoundref="StackRigid_8h" startline="18">__overload</references>
        <references refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039afd89a4e74adda7fac95c033ffc862a33" compoundref="StackRigid_8h" startline="66">STACK_OP_INTEGRITYERR</references>
        <references refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" compoundref="StackRigid_8h" startline="267" endline="281">StackElementType</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1aea62c82768cd6ef1a56cd05e68501788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(realocResult !=STACK_OP_OK)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1a19c628be7020d2b8a22b37cba648660e" kindref="member">realocResult</ref> !</type>
          <defval><ref refid="StackRigid_8h_1a049b8238cb27892165351846886d6a2e" kindref="member">STACK_OP_OK</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="250" column="5" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="250" bodyend="253"/>
        <references refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" compoundref="StackRigid_8h" startline="18">__overload</references>
        <references refid="StackRigid_8h_1a19c628be7020d2b8a22b37cba648660e" compoundref="StackRigid_8h" startline="249">realocResult</references>
        <references refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" compoundref="StackRigid_8h" startline="267" endline="281">StackElementType</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1ac3f2a71b97d4042e4d01ddcc25a452f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>((*stack) -&gt;size==0)</argsstring>
        <name>if</name>
        <param>
          <type>*<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref> -&gt;</type>
          <declname>size</declname>
          <defval>=0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="260" column="5" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="260" bodyend="262" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="295" declcolumn="5"/>
        <references refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039a3fd246337bd474e0b0be6c3db2106283" compoundref="StackRigid_8h" startline="58">STACK_OP_OVERFLOW</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a6255c701c412ca293fc27561ae802ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(stack-&gt;size==0) return STACK_OP_UNDERFLOW</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;</type>
          <declname>size</declname>
          <defval>=0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="318" column="5" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="318" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1aaab6a4481bea7da1de566fcf9ff2132c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(stack-&gt;size &gt; stack-&gt;capacity||stack-&gt;checkSum==0||stack-&gt;checkSumVital==0) return STACK_ST_INTEGRITYERR</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity||<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;</type>
          <declname>checkSum</declname>
          <defval>=0||<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;<ref refid="StackRigid_8h_1a5786bffb29b2425c43a80d1ecddbc416" kindref="member">checkSumVital</ref>==0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="331" column="5" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="331" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a20f08133b032e39c58d05a46339714c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(currentChecksumVital !=stack-&gt;checkSumVital||currentChecksumVital==0) return STACK_ST_INTEGRITYERR</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1a2caa8097440c1e2a2423da9b7ae9404c" kindref="member">currentChecksumVital</ref> !</type>
          <defval><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;<ref refid="StackRigid_8h_1a5786bffb29b2425c43a80d1ecddbc416" kindref="member">checkSumVital</ref>||<ref refid="StackRigid_8h_1a2caa8097440c1e2a2423da9b7ae9404c" kindref="member">currentChecksumVital</ref>==0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="335" column="5" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="335" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a5dd53bb08db89e777a3fcb0349c621e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(currentChecksum !=stack-&gt;checkSum||currentChecksum==0) return STACK_ST_INTEGRITYERR</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1a93186122a9f6b9791d9b1d7929397034" kindref="member">currentChecksum</ref> !</type>
          <defval><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;<ref refid="StackRigid_8h_1a78512a9976489009fe415634772b2edf" kindref="member">checkSum</ref>||<ref refid="StackRigid_8h_1a93186122a9f6b9791d9b1d7929397034" kindref="member">currentChecksum</ref>==0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="339" column="5" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="339" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a1b40b170e263c4f9624a0b0e26a750b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(stack-&gt;size &gt; stack-&gt;capacity)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="362" column="5" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="362" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a660098758f67572f0d1a8e0381e2ad4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>return</type>
        <definition>return adlerChecksum</definition>
        <argsstring>(firstBlock, memory)</argsstring>
        <name>adlerChecksum</name>
        <param>
          <type><ref refid="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" kindref="member">firstBlock</ref></type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="365" column="12" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="365" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a94a014c56957d128b71edf7751ec0a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>return</type>
        <definition>return sizeof</definition>
        <argsstring>(__overload(StackRigid, StackElementType))+(stack -&gt; capacity - 1) *sizeof(StackElementType)</argsstring>
        <name>sizeof</name>
        <param>
          <type><ref refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>, <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="446" column="12" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="446" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a16a7171e9728bb34fc74d1c2c3d59275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(output==NULL)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
          <defval>=NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="455" column="5" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="455" bodyend="458"/>
        <references refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" compoundref="StackRigid_8h" startline="454">output</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;=================================\n&quot;)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="460" column="5" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="460" declcolumn="5"/>
        <referencedby refid="StackRigid_8h_1ab6e1a246017ca3742ce77f0b32327841" compoundref="StackRigid_8h" startline="495" endline="500">for</referencedby>
        <referencedby refid="StackRigid_8h_1ac59b21b66112b7b013203caff8473b32" compoundref="StackRigid_8h" startline="463" endline="465">if</referencedby>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1ac7f14232afefe5d6d99cc8a2d2284307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;Stack dump %s&quot;, asctime(ptm))</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;Stack dump %s&quot;</type>
        </param>
        <param>
          <type>asctime(<ref refid="StackRigid_8h_1a968bd499cfe6e605baa6874ca0c86d2e" kindref="member">ptm</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="461" column="5" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="461" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1ac59b21b66112b7b013203caff8473b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(stack==NULL)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref></type>
          <defval>=NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="463" column="5" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="463" bodyend="465"/>
        <references refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897">fprintf</references>
        <references refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" compoundref="StackRigid_8h" startline="454">output</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a1d864cc9683f31009e740a88e7dd9e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>switch</definition>
        <argsstring>(checks)</argsstring>
        <name>switch</name>
        <param>
          <type><ref refid="StackRigid_8h_1aa24d2025a949cfcab6af74bbea7bbd93" kindref="member">checks</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="469" column="9" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="469" bodyend="482"/>
        <references refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" compoundref="StackRigid_8h" startline="85">STACK_ST_INTEGRITYERR</references>
        <references refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fae8a01dc716200146f1c2488155a40ecb" compoundref="StackRigid_8h" startline="93">STACK_ST_NULL</references>
        <references refid="StackRigid_8h_1a4b2b5de94a6d5cbd85ca204c433b6e74" compoundref="StackRigid_8h" startline="343">STACK_ST_OK</references>
        <references refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa61adf5622b3c4fa9e8bb422932e3ed58" compoundref="StackRigid_8h" startline="89">STACK_ST_UNINITIALIZED</references>
        <references refid="StackRigid_8h_1ac9758d3e0260183af2f6a061cd9254f5" compoundref="StackRigid_8h" startline="467">status</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a0e04fda11c1ca6c07e10492f8a79fcef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;%s&quot;, status)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;%s&quot;</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1ac9758d3e0260183af2f6a061cd9254f5" kindref="member">status</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="483" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="483" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a957e3ac0432b16bd0b0b331bc5b5db6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;)&quot;)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="484" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="484" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1aed5e33faf012386d8e74d010d2359eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(checks==STACK_ST_INTEGRITYERR)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1aa24d2025a949cfcab6af74bbea7bbd93" kindref="member">checks</ref></type>
          <defval>=<ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" kindref="member">STACK_ST_INTEGRITYERR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="486" column="9" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="486" bodyend="488"/>
        <references refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897">fprintf</references>
        <references refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" compoundref="StackRigid_8h" startline="454">output</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a3e42dd2239aac378191c1757dd87877f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;\t    size : %lu\n&quot;, stack-&gt;size)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;\t <ref refid="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" kindref="member">size</ref> : %lu\n&quot;</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="489" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="489" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1abdf17366eeaad5a885c6d9f879dbb345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;\tcapacity : %lu\n&quot;, stack-&gt;capacity)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;\tcapacity : %lu\n&quot;</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="490" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="490" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1af898ae2b970c700129aacbaf5a2885dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;\tcheckSum : %x\n&quot;, stack-&gt;checkSum)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;\tcheckSum : %x\n&quot;</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;</type>
          <declname>checkSum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="491" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="491" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1ab6e1a246017ca3742ce77f0b32327841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>for</definition>
        <argsstring>(i=0;i&lt; stack-&gt;size;i++)</argsstring>
        <name>for</name>
        <param>
          <type><ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref></type>
          <defval>0;<ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref>&lt; <ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;<ref refid="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" kindref="member">size</ref>;<ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref>++</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="495" column="9" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="495" bodyend="500"/>
        <references refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897">fprintf</references>
        <references refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" compoundref="StackRigid_8h" startline="494">i</references>
        <references refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" compoundref="StackRigid_8h" startline="454">output</references>
        <references refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" compoundref="StackRigid_8h" startline="125">stack</references>
        <references refid="StackRigid_8h_1a231d62549d9cfc45a003c319b7e1779e" compoundref="StackRigid_8h" startline="21">StackElementDump</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1af85e0dc8d441df46d42e87aceb74882f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;\t\t _______\n&quot;)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;\t\t _______\n&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="501" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="501" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a5905730f9ceb85034f9cd5849194cbbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(stack-&gt;size&lt; stack-&gt;capacity)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;<ref refid="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" kindref="member">size</ref>&lt; <ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="502" column="9" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="502" bodyend="506"/>
        <references refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897">fprintf</references>
        <references refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" compoundref="StackRigid_8h" startline="494">i</references>
        <references refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" compoundref="StackRigid_8h" startline="454">output</references>
        <references refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" compoundref="StackRigid_8h" startline="125">stack</references>
        <references refid="StackRigid_8h_1a231d62549d9cfc45a003c319b7e1779e" compoundref="StackRigid_8h" startline="21">StackElementDump</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a0ae26ae1c312c7f76a50eb9087580724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(stack-&gt;size+1&lt; stack-&gt;capacity &amp;&amp;stack-&gt;size+1 &gt; stack-&gt;size)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;<ref refid="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" kindref="member">size</ref>+1&lt; <ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity &amp;&amp;<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;<ref refid="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" kindref="member">size</ref>+</type>
          <declname>1</declname>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="507" column="9" bodyfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" bodystart="507" bodyend="511"/>
        <references refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897">fprintf</references>
        <references refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" compoundref="StackRigid_8h" startline="494">i</references>
        <references refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" compoundref="StackRigid_8h" startline="454">output</references>
        <references refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" compoundref="StackRigid_8h" startline="125">stack</references>
        <references refid="StackRigid_8h_1a231d62549d9cfc45a003c319b7e1779e" compoundref="StackRigid_8h" startline="21">StackElementDump</references>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a18b7cb11f7020175c4eed7b327382f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;\t}\n&quot;)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;\t}\n&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="512" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="512" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a132a01dc2ac14b0b055e9881c96a9e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;}\n&quot;)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;}\n&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="513" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="513" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1aa6a81f3b0cc5ce95d6b654f1d08a67f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;Size allocated : %lu bytes\n&quot;, memory)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;Size allocated : %lu bytes\n&quot;</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="516" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="516" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a65b039f6f4b41b137413ce0e0e3197fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;Raw Stack size : %lu bytes\n&quot;, sizeof(__overload(StackRigid, StackElementType)))</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot;Raw Stack <ref refid="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" kindref="member">size</ref> : %lu bytes\n&quot;</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1a94a014c56957d128b71edf7751ec0a47" kindref="member">sizeof</ref>(<ref refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>, <ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="517" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="517" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1a8d8008eab112c549b111559c2450f83d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;  Element size : %lu bytes\n&quot;, sizeof(StackElementType))</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot; Element <ref refid="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" kindref="member">size</ref> : %lu bytes\n&quot;</type>
        </param>
        <param>
          <type><ref refid="StackRigid_8h_1a94a014c56957d128b71edf7751ec0a47" kindref="member">sizeof</ref>(<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="518" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="518" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="StackRigid_8h_1ade6725d32f719f41a22d20ab9be146b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(output, &quot;     Block end : %p\n&quot;,(char *) stack+memory)</argsstring>
        <name>fprintf</name>
        <param>
          <type><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref></type>
        </param>
        <param>
          <type>&quot; Block end : %p\n&quot;</type>
        </param>
        <param>
          <type>(char *) <ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>+</type>
          <declname>memory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" line="519" column="9" declfile="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h" declline="519" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#undef<sp/>__overload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>PASTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>EVALUATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="StackRigid_8h_1a96e0bc8f204dbef33b6e6a664c5b5663" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PASTER(x,y)<sp/>x<sp/>##<sp/>_<sp/>##<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="StackRigid_8h_1a90ce550ff78fd420b633c5d88dfd2883" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVALUATOR(x,y)<sp/><sp/>PASTER(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__overload(FUNC,<sp/>TYPE)<sp/>EVALUATOR(FUNC,<sp/>TYPE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>StackElementDump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="StackRigid_8h_1a231d62549d9cfc45a003c319b7e1779e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>StackElementDump(FILE,<sp/>VALUE)<sp/>{fprintf(FILE,<sp/>&quot;%d&quot;,<sp/>VALUE);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>StackRigid_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>StackRigid_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="StackRigid_8h_1a37faf27d6e9ab4e0a417f29efbda1cbb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="StackRigid_8h_1a37faf27d6e9ab4e0a417f29efbda1cbb" kindref="member">adlerChecksum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" kindref="member">firstBlock</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>a<sp/>=<sp/>1,<sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>MOD_ADLER<sp/>=<sp/>65521;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>len;<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(a<sp/>+<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" kindref="member">firstBlock</ref>)[index])<sp/>%<sp/>MOD_ADLER;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(b<sp/>+<sp/>a)<sp/>%<sp/>MOD_ADLER;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>a;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a049b8238cb27892165351846886d6a2e" kindref="member">STACK_OP_OK</ref>,</highlight></codeline>
<codeline lineno="54" refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039aba36d99a3bcd8766e93ebb89f7e2f18c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039aba36d99a3bcd8766e93ebb89f7e2f18c" kindref="member">STACK_OP_UNDERFLOW</ref>,</highlight></codeline>
<codeline lineno="58" refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039a3fd246337bd474e0b0be6c3db2106283" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039a3fd246337bd474e0b0be6c3db2106283" kindref="member">STACK_OP_OVERFLOW</ref>,</highlight></codeline>
<codeline lineno="62" refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ac5fdd9b73e4decd4f5ddca7b680c345d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ac5fdd9b73e4decd4f5ddca7b680c345d" kindref="member">STACK_OP_NOMEMORY</ref>,</highlight></codeline>
<codeline lineno="66" refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039afd89a4e74adda7fac95c033ffc862a33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039afd89a4e74adda7fac95c033ffc862a33" kindref="member">STACK_OP_INTEGRITYERR</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e" kindref="member">STACK_OP_NULL</ref></highlight></codeline>
<codeline lineno="71" refid="StackRigid_8h_1a2b23b57ad918293ba96140fc43194967" refkind="member"><highlight class="normal">}<sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a4b2b5de94a6d5cbd85ca204c433b6e74" kindref="member">STACK_ST_OK</ref>,</highlight></codeline>
<codeline lineno="85" refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" kindref="member">STACK_ST_INTEGRITYERR</ref>,</highlight></codeline>
<codeline lineno="89" refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa61adf5622b3c4fa9e8bb422932e3ed58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa61adf5622b3c4fa9e8bb422932e3ed58" kindref="member">STACK_ST_UNINITIALIZED</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fae8a01dc716200146f1c2488155a40ecb" kindref="member">STACK_ST_NULL</ref></highlight></codeline>
<codeline lineno="94" refid="StackRigid_8h_1acc74b48b41d3ec38cb05184b602c7508" refkind="member"><highlight class="normal">}<sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>StackRigid_h<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="StackRigid_8h_1a94083fea0de2aea65e4fb9440048f757" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)<sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="StackRigid_8h_1a78512a9976489009fe415634772b2edf" kindref="member">checkSum</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="StackRigid_8h_1a5786bffb29b2425c43a80d1ecddbc416" kindref="member">checkSumVital</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>logFile;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref><sp/><ref refid="StackRigid_8h_1a1c97025785fbf9a8397e31479800f8fc" kindref="member">data</ref>[1];</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackUpdateChecksum,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="StackRigid_8h_1a96894c6e311ee779636592014ad2766c" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackGetChecksum,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="StackRigid_8h_1a9adbd875476f245e288278f140fbdc80" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackGetChecksumVital,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="StackRigid_8h_1a4766bcac8da8eeda84b39290e8a39006" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackRealocate,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)**<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a4766bcac8da8eeda84b39290e8a39006" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="StackRigid_8h_1a37faf27d6e9ab4e0a417f29efbda1cbb" kindref="member">adlerChecksum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" kindref="member">firstBlock</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(NewStackRigid,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity,<sp/>FILE*<sp/>logFile);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="StackRigid_8h_1a836cd947f32595eadd82154f5344b182" refkind="member"><highlight class="normal"><ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackValidate,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" refkind="member"><highlight class="normal"><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackPush,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)**<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref><sp/><ref refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="StackRigid_8h_1abf30878508ba254a5dee43d7ee97e812" refkind="member"><highlight class="normal"><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackPop,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)**<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>*<sp/><ref refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="StackRigid_8h_1a9b8f2344f7d59d6e3cb6658c2421ae31" refkind="member"><highlight class="normal"><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackDestruct,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)**<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="StackRigid_8h_1a818a7cd3215adbdabf0536a09bdb43b7" refkind="member"><highlight class="normal"><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackBack,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>*<sp/><ref refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="StackRigid_8h_1a4da094d1d949e620fca0a15b481b46de" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackDump,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="StackRigid_8h_1a7a941e78c0980d17350db0d968cde4ad" refkind="member"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackRigidMemoryUse,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackPush,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)**<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref><sp/><ref refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" kindref="member">value</ref>){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e" kindref="member">STACK_OP_NULL</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243" refid="StackRigid_8h_1a2c1f314ba75202e9c0ef4e2d93a7bb6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref><sp/><ref refid="StackRigid_8h_1a2c1f314ba75202e9c0ef4e2d93a7bb6d" kindref="member">integrityChecks</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackValidate,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)<sp/>(*stack);</highlight></codeline>
<codeline lineno="244" refid="StackRigid_8h_1af79bbc185100ee1491995ae80396a2f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1a2c1f314ba75202e9c0ef4e2d93a7bb6d" kindref="member">integrityChecks</ref><sp/>!=<sp/><ref refid="StackRigid_8h_1a4b2b5de94a6d5cbd85ca204c433b6e74" kindref="member">STACK_ST_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackDump,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(*stack);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039afd89a4e74adda7fac95c033ffc862a33" kindref="member">STACK_OP_INTEGRITYERR</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249" refid="StackRigid_8h_1a19c628be7020d2b8a22b37cba648660e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a19c628be7020d2b8a22b37cba648660e" kindref="member">realocResult</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackRealocate,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="250" refid="StackRigid_8h_1aea62c82768cd6ef1a56cd05e68501788" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1a19c628be7020d2b8a22b37cba648660e" kindref="member">realocResult</ref><sp/>!=<sp/><ref refid="StackRigid_8h_1a049b8238cb27892165351846886d6a2e" kindref="member">STACK_OP_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackDump,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(*stack);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a19c628be7020d2b8a22b37cba648660e" kindref="member">realocResult</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255" refid="StackRigid_8h_1a1c97025785fbf9a8397e31479800f8fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>(*stack)-&gt;data[(*stack)-&gt;size]<sp/>=<sp/><ref refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="256" refid="StackRigid_8h_1af5b7426926caad2613af178a841c4a99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>(*stack)-&gt;size<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackUpdateChecksum,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(*stack);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260" refid="StackRigid_8h_1ac3f2a71b97d4042e4d01ddcc25a452f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*stack)-&gt;size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039a3fd246337bd474e0b0be6c3db2106283" kindref="member">STACK_OP_OVERFLOW</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263" refid="StackRigid_8h_1a049b8238cb27892165351846886d6a2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a049b8238cb27892165351846886d6a2e" kindref="member">STACK_OP_OK</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" refkind="member"><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(NewStackRigid,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity,<sp/>FILE*<sp/>logFile){</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>))<sp/>+<sp/>(capacity<sp/>-<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/>pointer<sp/>=<sp/>(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*)calloc(<ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointer<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer-&gt;capacity<sp/>=<sp/>capacity;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer-&gt;size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer-&gt;logFile<sp/>=<sp/>logFile;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer-&gt;checkSum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer-&gt;checkSumVital<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackUpdateChecksum,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(pointer);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointer;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackPop,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)**<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>*<sp/><ref refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" kindref="member">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e" kindref="member">STACK_OP_NULL</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref><sp/><ref refid="StackRigid_8h_1a2c1f314ba75202e9c0ef4e2d93a7bb6d" kindref="member">integrityChecks</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackValidate,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(*stack);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1a2c1f314ba75202e9c0ef4e2d93a7bb6d" kindref="member">integrityChecks</ref><sp/>!=<sp/><ref refid="StackRigid_8h_1a4b2b5de94a6d5cbd85ca204c433b6e74" kindref="member">STACK_ST_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackDump,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(*stack);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039afd89a4e74adda7fac95c033ffc862a33" kindref="member">STACK_OP_INTEGRITYERR</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*stack)-&gt;size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039aba36d99a3bcd8766e93ebb89f7e2f18c" kindref="member">STACK_OP_UNDERFLOW</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" kindref="member">value</ref><sp/>=<sp/>(*stack)-&gt;data[(*stack)-&gt;size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>(*stack)-&gt;size<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackRealocate,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackUpdateChecksum,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(*stack);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a049b8238cb27892165351846886d6a2e" kindref="member">STACK_OP_OK</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackBack,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>*<sp/><ref refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" kindref="member">value</ref>){</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e" kindref="member">STACK_OP_NULL</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref><sp/><ref refid="StackRigid_8h_1a2c1f314ba75202e9c0ef4e2d93a7bb6d" kindref="member">integrityChecks</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackValidate,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1a2c1f314ba75202e9c0ef4e2d93a7bb6d" kindref="member">integrityChecks</ref><sp/>!=<sp/><ref refid="StackRigid_8h_1a4b2b5de94a6d5cbd85ca204c433b6e74" kindref="member">STACK_ST_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackDump,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039afd89a4e74adda7fac95c033ffc862a33" kindref="member">STACK_OP_INTEGRITYERR</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318" refid="StackRigid_8h_1a6255c701c412ca293fc27561ae802ebd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039aba36d99a3bcd8766e93ebb89f7e2f18c" kindref="member">STACK_OP_UNDERFLOW</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="StackRigid_8h_1a1f81d06f9ccd5ec47176a7fc466b6030" kindref="member">value</ref><sp/>=<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;data[<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a049b8238cb27892165351846886d6a2e" kindref="member">STACK_OP_OK</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackValidate,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fae8a01dc716200146f1c2488155a40ecb" kindref="member">STACK_ST_NULL</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331" refid="StackRigid_8h_1aaab6a4481bea7da1de566fcf9ff2132c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size<sp/>&gt;<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity<sp/>||<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSum<sp/>==<sp/>0<sp/>||<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSumVital<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" kindref="member">STACK_ST_INTEGRITYERR</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334" refid="StackRigid_8h_1a2caa8097440c1e2a2423da9b7ae9404c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="StackRigid_8h_1a2caa8097440c1e2a2423da9b7ae9404c" kindref="member">currentChecksumVital</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackGetChecksumVital,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="335" refid="StackRigid_8h_1a20f08133b032e39c58d05a46339714c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1a2caa8097440c1e2a2423da9b7ae9404c" kindref="member">currentChecksumVital</ref><sp/>!=<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSumVital<sp/>||<sp/><ref refid="StackRigid_8h_1a2caa8097440c1e2a2423da9b7ae9404c" kindref="member">currentChecksumVital</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" kindref="member">STACK_ST_INTEGRITYERR</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338" refid="StackRigid_8h_1a93186122a9f6b9791d9b1d7929397034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="StackRigid_8h_1a93186122a9f6b9791d9b1d7929397034" kindref="member">currentChecksum</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackGetChecksum,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="339" refid="StackRigid_8h_1a5dd53bb08db89e777a3fcb0349c621e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1a93186122a9f6b9791d9b1d7929397034" kindref="member">currentChecksum</ref><sp/>!=<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSum<sp/>||<sp/><ref refid="StackRigid_8h_1a93186122a9f6b9791d9b1d7929397034" kindref="member">currentChecksum</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" kindref="member">STACK_ST_INTEGRITYERR</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="StackRigid_8h_1a4b2b5de94a6d5cbd85ca204c433b6e74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a4b2b5de94a6d5cbd85ca204c433b6e74" kindref="member">STACK_ST_OK</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackUpdateChecksum,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="StackRigid_8h_1a5786bffb29b2425c43a80d1ecddbc416" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSumVital<sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackGetChecksumVital,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="351" refid="StackRigid_8h_1a78512a9976489009fe415634772b2edf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSum<sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackGetChecksum,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackGetChecksumVital,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359" refid="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" kindref="member">firstBlock</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSum)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSumVital);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361" refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity)+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;logFile);</highlight></codeline>
<codeline lineno="362" refid="StackRigid_8h_1a1b40b170e263c4f9624a0b0e26a750b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size<sp/>&gt;<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365" refid="StackRigid_8h_1a660098758f67572f0d1a8e0381e2ad4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a37faf27d6e9ab4e0a417f29efbda1cbb" kindref="member">adlerChecksum</ref>(<ref refid="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" kindref="member">firstBlock</ref>,<sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackGetChecksum,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" kindref="member">firstBlock</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSum);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Memory<sp/>used<sp/>by<sp/>Stack<sp/>excluding<sp/>checkSum<sp/>and<sp/>free<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackRigidMemoryUse,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSum)<sp/>-<sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity<sp/>-<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackRigidMemoryUse,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSum);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size<sp/>&gt;<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a37faf27d6e9ab4e0a417f29efbda1cbb" kindref="member">adlerChecksum</ref>(<ref refid="StackRigid_8h_1a95d3254ef28c50444625b7eb7a0005e3" kindref="member">firstBlock</ref>,<sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(__StackRealocate,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)**<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a4766bcac8da8eeda84b39290e8a39006" kindref="member">direction</ref>)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*stack)-&gt;capacity<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stack)-&gt;capacity<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackRigidMemoryUse,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(*stack);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/>newStack<sp/>=<sp/>(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*)<sp/>realloc((*<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>),<sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newStack<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ac5fdd9b73e4decd4f5ddca7b680c345d" kindref="member">STACK_OP_NOMEMORY</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stack)<sp/>=<sp/>newStack;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((*stack)-&gt;capacity<sp/>&lt;=<sp/>(*stack)-&gt;size)<sp/>&amp;&amp;<sp/><ref refid="StackRigid_8h_1a4766bcac8da8eeda84b39290e8a39006" kindref="member">direction</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Up<sp/>realocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newCapacity<sp/>=<sp/>(*stack)-&gt;size<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newCapacity<sp/>&lt;=<sp/>(*stack)-&gt;size)<sp/>{<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>we<sp/>exceeded<sp/>size_t<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newCapacity<sp/>=<sp/>(*stack)-&gt;size<sp/>+<sp/>16;<sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>add<sp/>16<sp/>free<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newCapacity<sp/>&lt;<sp/>(*stack)-&gt;size)<sp/></highlight><highlight class="comment">//<sp/><sp/>Even<sp/>if<sp/>in<sp/>this<sp/>case<sp/>we<sp/>still<sp/>exceed<sp/>size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039a3fd246337bd474e0b0be6c3db2106283" kindref="member">STACK_OP_OVERFLOW</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>memoryNow<sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackRigidMemoryUse,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(*stack);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>memoryNew<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>))<sp/>+<sp/>(newCapacity<sp/>-<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memoryNew<sp/>&gt;=<sp/>memoryNow)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/>newStack<sp/>=<sp/>(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*)<sp/>realloc((*<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>),<sp/>memoryNew);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newStack<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ac5fdd9b73e4decd4f5ddca7b680c345d" kindref="member">STACK_OP_NOMEMORY</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stack)<sp/>=<sp/>newStack;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039a3fd246337bd474e0b0be6c3db2106283" kindref="member">STACK_OP_OVERFLOW</ref>;<sp/></highlight><highlight class="comment">//<sp/>Exceded<sp/>size_t<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stack)-&gt;capacity<sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((*stack)-&gt;capacity<sp/>/<sp/>2.2<sp/>&gt;<sp/>(*stack)-&gt;size)<sp/>&amp;&amp;<sp/><ref refid="StackRigid_8h_1a4766bcac8da8eeda84b39290e8a39006" kindref="member">direction</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Down<sp/>realocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newCapacity<sp/>=<sp/>(*stack)-&gt;capacity<sp/>/<sp/>2.2;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>memoryNow<sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackRigidMemoryUse,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(*stack);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>memoryNew<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>))<sp/>+<sp/>(newCapacity<sp/>-<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memoryNew<sp/>&lt;=<sp/>memoryNow)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/>newStack<sp/>=<sp/>(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*)<sp/>realloc((*<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>),<sp/>memoryNew);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newStack<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ac5fdd9b73e4decd4f5ddca7b680c345d" kindref="member">STACK_OP_NOMEMORY</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stack)<sp/>=<sp/>newStack;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*stack)-&gt;capacity<sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039a3fd246337bd474e0b0be6c3db2106283" kindref="member">STACK_OP_OVERFLOW</ref>;<sp/></highlight><highlight class="comment">//<sp/>Exceded<sp/>size_t<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a049b8238cb27892165351846886d6a2e" kindref="member">STACK_OP_OK</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackRigidMemoryUse,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="446" refid="StackRigid_8h_1a94a014c56957d128b71edf7751ec0a47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>))<sp/>+<sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity<sp/>-<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackDump,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)*<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>rawtime<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="452" refid="StackRigid_8h_1a968bd499cfe6e605baa6874ca0c86d2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*<ref refid="StackRigid_8h_1a968bd499cfe6e605baa6874ca0c86d2e" kindref="member">ptm</ref><sp/>=<sp/>localtime(&amp;rawtime);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454" refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref><sp/>=<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;logFile;</highlight></codeline>
<codeline lineno="455" refid="StackRigid_8h_1a16a7171e9728bb34fc74d1c2c3d59275" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref><sp/>=<sp/>stdout;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nWarning!<sp/>Specified<sp/>dump<sp/>output<sp/>is<sp/>inavailbale!<sp/>Selecting<sp/>stdout.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="460" refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;=================================\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461" refid="StackRigid_8h_1ac7f14232afefe5d6d99cc8a2d2284307" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Stack<sp/>dump<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>asctime(<ref refid="StackRigid_8h_1a968bd499cfe6e605baa6874ca0c86d2e" kindref="member">ptm</ref>));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="463" refid="StackRigid_8h_1ac59b21b66112b7b013203caff8473b32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\nStack<sp/>dump<sp/>is<sp/>impossible:<sp/>NULL<sp/>pointer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465" refid="StackRigid_8h_1a0544c3fe466e421738dae463968b70ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Stack<sp/>(&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467" refid="StackRigid_8h_1ac9758d3e0260183af2f6a061cd9254f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="StackRigid_8h_1ac9758d3e0260183af2f6a061cd9254f5" kindref="member">status</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468" refid="StackRigid_8h_1aa24d2025a949cfcab6af74bbea7bbd93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackEssentials_8h_1a3afb87b043e438be2a48ba69fe4deb5f" kindref="member">StackRigidState</ref><sp/><ref refid="StackRigid_8h_1aa24d2025a949cfcab6af74bbea7bbd93" kindref="member">checks</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackValidate,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="469" refid="StackRigid_8h_1a1d864cc9683f31009e740a88e7dd9e08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1aa24d2025a949cfcab6af74bbea7bbd93" kindref="member">checks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" kindref="member">STACK_ST_INTEGRITYERR</ref>:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1ac9758d3e0260183af2f6a061cd9254f5" kindref="member">status</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;INTEGRITY<sp/>ERROR<sp/>SPOTTED&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa61adf5622b3c4fa9e8bb422932e3ed58" kindref="member">STACK_ST_UNINITIALIZED</ref>:</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1ac9758d3e0260183af2f6a061cd9254f5" kindref="member">status</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UNINITIALIZED&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a4b2b5de94a6d5cbd85ca204c433b6e74" kindref="member">STACK_ST_OK</ref>:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1ac9758d3e0260183af2f6a061cd9254f5" kindref="member">status</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fae8a01dc716200146f1c2488155a40ecb" kindref="member">STACK_ST_NULL</ref>:</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1ac9758d3e0260183af2f6a061cd9254f5" kindref="member">status</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NULL<sp/>POINTER&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483" refid="StackRigid_8h_1a0e04fda11c1ca6c07e10492f8a79fcef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="StackRigid_8h_1ac9758d3e0260183af2f6a061cd9254f5" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="484" refid="StackRigid_8h_1a957e3ac0432b16bd0b0b331bc5b5db6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[%p]:<sp/>{\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="486" refid="StackRigid_8h_1aed5e33faf012386d8e74d010d2359eaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1aa24d2025a949cfcab6af74bbea7bbd93" kindref="member">checks</ref><sp/>==<sp/><ref refid="StackRigid_8h_1a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0" kindref="member">STACK_ST_INTEGRITYERR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR!<sp/>Stack<sp/>structure<sp/>was<sp/>corrupted.<sp/>The<sp/>data<sp/>below<sp/>was<sp/>changed<sp/>from<sp/>the<sp/>outside.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489" refid="StackRigid_8h_1a3e42dd2239aac378191c1757dd87877f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\t<sp/><sp/><sp/><sp/>size<sp/>:<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size);</highlight></codeline>
<codeline lineno="490" refid="StackRigid_8h_1abdf17366eeaad5a885c6d9f879dbb345" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\tcapacity<sp/>:<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity);</highlight></codeline>
<codeline lineno="491" refid="StackRigid_8h_1af898ae2b970c700129aacbaf5a2885dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\tcheckSum<sp/>:<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;checkSum);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\tdata<sp/>[%p]:<sp/>{\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;data);</highlight></codeline>
<codeline lineno="494" refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="495" refid="StackRigid_8h_1ab6e1a246017ca3742ce77f0b32327841" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size;<sp/><ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\t\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*[%lu]<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a231d62549d9cfc45a003c319b7e1779e" kindref="member">StackElementDump</ref>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;logFile,<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;data[<ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501" refid="StackRigid_8h_1af85e0dc8d441df46d42e87aceb74882f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\t\t<sp/>_______\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="502" refid="StackRigid_8h_1a5905730f9ceb85034f9cd5849194cbbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size<sp/>&lt;<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\t\t<sp/>[%lu]<sp/>:<sp/>GARBAGE(&quot;</highlight><highlight class="normal">,<sp/><ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a231d62549d9cfc45a003c319b7e1779e" kindref="member">StackElementDump</ref>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;logFile,<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;data[<ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref><sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507" refid="StackRigid_8h_1a0ae26ae1c312c7f76a50eb9087580724" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size<sp/>+<sp/>1<sp/>&lt;<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;capacity<sp/>&amp;&amp;<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size<sp/>+<sp/>1<sp/>&gt;<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;size)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\t\t<sp/>[%lu]<sp/>:<sp/>GARBAGE(&quot;</highlight><highlight class="normal">,<sp/><ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref><sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a231d62549d9cfc45a003c319b7e1779e" kindref="member">StackElementDump</ref>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;logFile,<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>-&gt;data[<ref refid="StackRigid_8h_1ae46bd26d7133dfe98f8cec7c5ac5c7a1" kindref="member">i</ref><sp/>+<sp/>2]);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512" refid="StackRigid_8h_1a18b7cb11f7020175c4eed7b327382f7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\t}\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513" refid="StackRigid_8h_1a132a01dc2ac14b0b055e9881c96a9e49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref><sp/>=<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackRigidMemoryUse,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="516" refid="StackRigid_8h_1aa6a81f3b0cc5ce95d6b654f1d08a67f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Size<sp/>allocated<sp/>:<sp/>%lu<sp/>bytes\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref>);</highlight></codeline>
<codeline lineno="517" refid="StackRigid_8h_1a65b039f6f4b41b137413ce0e0e3197fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Raw<sp/>Stack<sp/>size<sp/>:<sp/>%lu<sp/>bytes\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)));</highlight></codeline>
<codeline lineno="518" refid="StackRigid_8h_1a8d8008eab112c549b111559c2450f83d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Element<sp/>size<sp/>:<sp/>%lu<sp/>bytes\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>));</highlight></codeline>
<codeline lineno="519" refid="StackRigid_8h_1ade6725d32f719f41a22d20ab9be146b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>Block<sp/>end<sp/>:<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref><sp/>+<sp/><ref refid="StackRigid_8h_1aac6e07c71f4eb8265c1ba1efda2dd8ed" kindref="member">memory</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="StackRigid_8h_1a0df8bd3a5eea34005eab1a1dcc33b897" kindref="member">fprintf</ref>(<ref refid="StackRigid_8h_1ab41bf19330e50c3c7bf3544c53f30971" kindref="member">output</ref>,<sp/></highlight><highlight class="stringliteral">&quot;=================================\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><ref refid="StackEssentials_8h_1afa660da841608914d20d9819a7efe039" kindref="member">StackRigidOperationCodes</ref><sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(StackDestruct,<sp/><ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)(<sp/><ref refid="StackRigid_8h_1a2cbee6c5dd610768a24ea755d3db8ed9" kindref="member">__overload</ref>(<ref refid="StackEssentials_8h_1ac5d0efeed13c8b47552928dc34ac2d9a" kindref="member">StackRigid</ref>,<ref refid="StackRigid_8h_1af8b6893750f868193aa85e4bdc86b200" kindref="member">StackElementType</ref>)**<sp/><ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e" kindref="member">STACK_OP_NULL</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e" kindref="member">STACK_OP_NULL</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>free(*<ref refid="StackRigid_8h_1add98115d16c73f44db53adf6684e9071" kindref="member">stack</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="StackRigid_8h_1a049b8238cb27892165351846886d6a2e" kindref="member">STACK_OP_OK</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aleksandrdremov/Desktop/Обучение/МФТИ/ФПМИ/Прога_1 сем/StackOnSteroids/StackOnSteroids/StackRigid.h"/>
  </compounddef>
</doxygen>
