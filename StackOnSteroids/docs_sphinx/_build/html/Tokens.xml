<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>main_8cpp.html</Path>
    <Anchor>ac0f2228420376f4db7e1274f2b41667c</Anchor>
    <DeclaredIn>main.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackRigidAvgTimes</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>main_8cpp.html</Path>
    <Anchor>a48fcf97300586f7cbb6fc742b3ba6b02</Anchor>
    <DeclaredIn>main.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEBUGSPEED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a024c7a2dca4a8bcc93281411d85f7d35</Anchor>
    <Abstract>If defined, collects average speed information during the run.</Abstract>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NewStackRigid</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a78fa7085db2ddf6539c86400256a70bc</Anchor>
    <Abstract>Create new stack with pre-defined capacity.</Abstract>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackPush</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>aa71965140614d8c1654bf8a4b92b5f38</Anchor>
    <Abstract>Push the value to the stack The operation can perform realocations if there is not enough space.</Abstract>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackPop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a531f4e733d2d8af3f520414d5e25d973</Anchor>
    <Abstract>Pop value from the end of the stack The operation can perform realocations if there is too much space...</Abstract>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackBack</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a6c282d58a717d9b480e1373423a862b9</Anchor>
    <Abstract>Free stack memory.</Abstract>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackValidate</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>ae9cc68f55c68d4d8f4fb349127866446</Anchor>
    <Abstract>Perform all stack checks: checksums, general constrains.</Abstract>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__StackUpdateChecksum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>ae84aef62fb8899daab9e6dc06d8cf93d</Anchor>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__StackGetChecksumVital</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a709f63f68d921770a9c220e88af2dcd2</Anchor>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__StackGetChecksum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a648682514d2a2e415c30454757b70eaa</Anchor>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__StackRealocate</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a0566d9c52c7de00974ab803970351069</Anchor>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adlerChecksum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a37faf27d6e9ab4e0a417f29efbda1cbb</Anchor>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackRigidMemoryUse</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>aeff826357c5b8892871d9972ecfaf24a</Anchor>
    <Abstract>Memory alocated for the Stack.</Abstract>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackDump</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a7b0f9ae879d5f5cd628b661cf5573d4b</Anchor>
    <Abstract>Dumps debug information about the stack.</Abstract>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackDestruct</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a660dd8200124031484d0c9dd596130d1</Anchor>
    <Abstract>Free stack memory.</Abstract>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>movingAverageBetta</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a7e3b350174ff88dacd94c1c37149cdc5</Anchor>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackRigidAvgTimes</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>StackRigid_8cpp.html</Path>
    <Anchor>a48fcf97300586f7cbb6fc742b3ba6b02</Anchor>
    <DeclaredIn>StackRigid.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackElementType</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a5f5a2d235dc4419fc37f7f21c956cfba</Anchor>
    <Abstract>Element type to be used in Stack.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackRigid</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>ac5d0efeed13c8b47552928dc34ac2d9a</Anchor>
    <Abstract>The main structure.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackRigidOperationCodes</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a2b23b57ad918293ba96140fc43194967</Anchor>
    <Abstract>Codes returned after operations on Stack.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackRigidState</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>acc74b48b41d3ec38cb05184b602c7508</Anchor>
    <Abstract>Codes characterizing Stack state.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NewStackRigid</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a78fa7085db2ddf6539c86400256a70bc</Anchor>
    <Abstract>Create new stack with pre-defined capacity.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackValidate</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>ae9cc68f55c68d4d8f4fb349127866446</Anchor>
    <Abstract>Perform all stack checks: checksums, general constrains.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackPush</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>aa71965140614d8c1654bf8a4b92b5f38</Anchor>
    <Abstract>Push the value to the stack The operation can perform realocations if there is not enough space.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackPop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a531f4e733d2d8af3f520414d5e25d973</Anchor>
    <Abstract>Pop value from the end of the stack The operation can perform realocations if there is too much space...</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackDestruct</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a660dd8200124031484d0c9dd596130d1</Anchor>
    <Abstract>Free stack memory.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackBack</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a6c282d58a717d9b480e1373423a862b9</Anchor>
    <Abstract>Free stack memory.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackDump</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a7b0f9ae879d5f5cd628b661cf5573d4b</Anchor>
    <Abstract>Dumps debug information about the stack.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackRigidMemoryUse</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>aeff826357c5b8892871d9972ecfaf24a</Anchor>
    <Abstract>Memory alocated for the Stack.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__StackUpdateChecksum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>ae84aef62fb8899daab9e6dc06d8cf93d</Anchor>
    <Abstract>Updates Stack checksums. Does not take into account bytes inside the stack but outside of its last el...</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__StackGetChecksum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a648682514d2a2e415c30454757b70eaa</Anchor>
    <Abstract>Claculates big Stack checksum. Uses Adler-32 method.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__StackGetChecksumVital</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a709f63f68d921770a9c220e88af2dcd2</Anchor>
    <Abstract>Uses Adler-32 method. Calculates Stack checksum only for the vital parameters. This is necessary beca...</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__StackRealocate</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a0566d9c52c7de00974ab803970351069</Anchor>
    <Abstract>Realocates Stack if needed.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adlerChecksum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a37faf27d6e9ab4e0a417f29efbda1cbb</Anchor>
    <Abstract>Calculates Adler-32 checksum from the firstBlock to the firstBlock + len.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STACK_OP_OK</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>afa660da841608914d20d9819a7efe039a049b8238cb27892165351846886d6a2e</Anchor>
    <Abstract>Succesful operation.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STACK_OP_UNDERFLOW</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>afa660da841608914d20d9819a7efe039aba36d99a3bcd8766e93ebb89f7e2f18c</Anchor>
    <Abstract>Tried to get value from the empty stack.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STACK_OP_OVERFLOW</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>afa660da841608914d20d9819a7efe039a3fd246337bd474e0b0be6c3db2106283</Anchor>
    <Abstract>Stack overflow and new memory allocation failed.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STACK_OP_NOMEMORY</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>afa660da841608914d20d9819a7efe039ac5fdd9b73e4decd4f5ddca7b680c345d</Anchor>
    <Abstract>No memory for stack alocations.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STACK_OP_INTEGRITYERR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>afa660da841608914d20d9819a7efe039afd89a4e74adda7fac95c033ffc862a33</Anchor>
    <Abstract>Stack memory was altered by some outer access.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STACK_OP_NULL</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>afa660da841608914d20d9819a7efe039ab949780f05a1efd2092dc9057bcf2b4e</Anchor>
    <Abstract>Found NULL pointer during the operation.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STACK_ST_OK</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a3afb87b043e438be2a48ba69fe4deb5fa4b2b5de94a6d5cbd85ca204c433b6e74</Anchor>
    <Abstract>Stack is running as expected.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STACK_ST_INTEGRITYERR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a3afb87b043e438be2a48ba69fe4deb5fa4efc249e686cc284db2f5c3c694c94d0</Anchor>
    <Abstract>Stack was altered by some outer access.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STACK_ST_UNINITIALIZED</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a3afb87b043e438be2a48ba69fe4deb5fa61adf5622b3c4fa9e8bb422932e3ed58</Anchor>
    <Abstract>Stack is uninitialized.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STACK_ST_NULL</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>StackRigid_8h.html</Path>
    <Anchor>a3afb87b043e438be2a48ba69fe4deb5fae8a01dc716200146f1c2488155a40ecb</Anchor>
    <Abstract>Found NULL pointer during the operation.</Abstract>
    <DeclaredIn>StackRigid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StackRigid</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StackRigid</Scope>
    </TokenIdentifier>
    <Path>structStackRigid.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkSum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>StackRigid</Scope>
    </TokenIdentifier>
    <Path>structStackRigid.html</Path>
    <Anchor>a86ac04a9e0b2f56ade748fedfd139a3e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkSumVital</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>StackRigid</Scope>
    </TokenIdentifier>
    <Path>structStackRigid.html</Path>
    <Anchor>a0578d16af9c23c9ae00bf29b1c13cafd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>StackRigid</Scope>
    </TokenIdentifier>
    <Path>structStackRigid.html</Path>
    <Anchor>a56670cc4df83ffba7a2bce7bbaad855c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>StackRigid</Scope>
    </TokenIdentifier>
    <Path>structStackRigid.html</Path>
    <Anchor>a07b58670c3ae24a7fedd9f4a3ad1725e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>StackRigid</Scope>
    </TokenIdentifier>
    <Path>structStackRigid.html</Path>
    <Anchor>aa7c68e49e3f2171045533e2684ae2748</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>StackRigid</Scope>
    </TokenIdentifier>
    <Path>structStackRigid.html</Path>
    <Anchor>a6150250d0c10519886570165597ba510</Anchor>
  </Token>
</Tokens>
